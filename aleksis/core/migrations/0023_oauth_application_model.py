# Generated by Django 3.2.8 on 2021-11-04 09:52

from django.apps import apps as global_apps
from django.conf import settings
from django.db import connection, migrations, models
import django.db.models.deletion
import oauth2_provider.generators

def migrate_oauth_applications(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    try:
        OldApp = apps.get_model("oauth2_provider", "Application")
    except LookupError:
        return
    NewApp = apps.get_model("core", "OAuthApplication")

    if connection.instrospection.table_names() & set(OldApp._meta.db_table):
        NewApp.objects.using(db_alias).bulk_create(
            [NewApp(**old_app) for old_app in OldApp.objects.values()]
        )


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0022_public_favicon'),
    ]

    run_before = []

    operations = [
        migrations.CreateModel(
            name='OAuthApplication',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('client_id', models.CharField(db_index=True, default=oauth2_provider.generators.generate_client_id, max_length=100, unique=True)),
                ('redirect_uris', models.TextField(blank=True, help_text='Allowed URIs list, space separated')),
                ('client_type', models.CharField(choices=[('confidential', 'Confidential'), ('public', 'Public')], max_length=32)),
                ('authorization_grant_type', models.CharField(choices=[('authorization-code', 'Authorization code'), ('implicit', 'Implicit'), ('password', 'Resource owner password-based'), ('client-credentials', 'Client credentials'), ('openid-hybrid', 'OpenID connect hybrid')], max_length=32)),
                ('client_secret', models.CharField(blank=True, db_index=True, default=oauth2_provider.generators.generate_client_secret, max_length=255)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('skip_authorization', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('algorithm', models.CharField(blank=True, choices=[('', 'No OIDC support'), ('RS256', 'RSA with SHA-2 256'), ('HS256', 'HMAC with SHA-2 256')], default='', max_length=5)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='core_oauthapplication', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]

    if global_apps.is_installed("oauth2_provider"):
        operations += [
            migrations.RunPython(migrate_oauth_applications),
            migrations.RunSQL("DROP TABLE IF EXISTS oauth2_provider_application;"),
        ]
    else:
        run_before.append(('oauth2_provider', '0001_initial'))
